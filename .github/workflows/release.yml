name: Auto Create Release

# 当main分支的package.json版本号发生变更时自动创建GitHub Release和tag
on:
  push:
    branches: [main]
    paths:
      - 'package.json'
  # 也支持手动触发
  workflow_dispatch:

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check.outputs.changed }}
      version: ${{ steps.check.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Check if version changed
        id: check
        run: |
          # 获取当前版本
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          
          # 检查上一次提交的版本
          git checkout HEAD~1 -- package.json 2>/dev/null || echo "No previous version"
          PREVIOUS_VERSION=$(node -p "require('./package.json').version" 2>/dev/null || echo "0.0.0")
          echo "Previous version: $PREVIOUS_VERSION"
          
          # 恢复当前版本
          git checkout HEAD -- package.json
          
          # 比较版本
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "Version not changed"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  release:
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: latest

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build extensions
        run: |
          echo "Building extensions for version ${{ needs.check-version.outputs.version }}"
          pnpm run build
          
          # 显示构建完成信息
          echo "Build completed for version ${{ needs.check-version.outputs.version }}"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.check-version.outputs.version }}
          release_name: Release v${{ needs.check-version.outputs.version }}
          body: |
            ## 🚀 网页休眠大师 v${{ needs.check-version.outputs.version }}
            
            ### 📦 发布说明
            此版本已自动构建完成，扩展包将手动维护并发布到各大浏览器商店。
            
            ### 📥 安装方式
            - **Chrome/Edge**: 从各自的应用商店搜索"网页休眠大师"
            - **Firefox**: 从Firefox Add-ons搜索"Tab Hibernator"
            
            ### 🔄 更新内容
            请查看提交历史了解详细更新内容。
            
            ### 🛠️ 开发者
            如需构建扩展包，请运行：
            ```bash
            pnpm run zip:all
            ```
          draft: false
          prerelease: false

      - name: Notify Success
        run: |
          echo "🎉 Successfully created release for 网页休眠大师 v${{ needs.check-version.outputs.version }}"
          echo "🏷️ Created GitHub release with tag v${{ needs.check-version.outputs.version }}"
          echo "📦 Extension packages can be built manually using: pnpm run zip:all"